version: '3.8'

services:
  app:
    build: .
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=db
      - DB_PORT=5433
      - DB_USERNAME=postgres
      - DB_PASSWORD=1111
      - DB_NAME=Intern
      - DB_SSL_MODE=disable
      - KAFKA_BROKERS=kafka:9092
    networks:
      - new
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:12
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1111
      - POSTGRES_DB=Intern
    ports:
      - "5434:5432"
    networks:
      - new
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d Intern" ]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - ./modelsql/init.sql:/docker-entrypoint-initdb.d/init.sql

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:29092,PLAINTEXT_HOST://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      # - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=L0ZEQh1yTbGhNNUE7-6wSQ
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - new

networks:
  new: